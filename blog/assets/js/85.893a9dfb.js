(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{1246:function(t,s,n){"use strict";n.r(s);var a=n(19),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),a("h2",{attrs:{id:"意图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意图"}},[t._v("#")]),t._v(" 意图")]),t._v(" "),a("p",[a("strong",[t._v("单例模式")]),t._v("是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。")]),t._v(" "),a("p",[a("img",{attrs:{src:n(418),alt:"单例模式"}})]),t._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("p",[t._v("单例模式同时解决了两个问题， 所以违反了_单一职责原则_：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("保证一个类只有一个实例")]),t._v("。 为什么会有人想要控制一个类所拥有的实例数量？ 最常见的原因是控制某些共享资源 （例如数据库或文件） 的访问权限。")]),t._v(" "),a("p",[t._v("它的运作方式是这样的： 如果你创建了一个对象， 同时过一会儿后你决定再创建一个新对象， 此时你会获得之前已创建的对象， 而不是一个新对象。")]),t._v(" "),a("p",[t._v("注意， 普通构造函数无法实现上述行为， 因为构造函数的设计决定了它"),a("strong",[t._v("必须")]),t._v("总是返回一个新对象。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:n(419),alt:"一个对象的全局访问节点"}})]),t._v(" "),a("p",[t._v("客户端甚至可能没有意识到它们一直都在使用同一个对象。")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("为该实例提供一个全局访问节点")]),t._v("。 还记得你 （好吧， 其实是我自己） 用过的那些存储重要对象的全局变量吗？ 它们在使用上十分方便， 但同时也非常不安全， 因为任何代码都有可能覆盖掉那些变量的内容， 从而引发程序崩溃。")]),t._v(" "),a("p",[t._v("和全局变量一样， 单例模式也允许在程序的任何地方访问特定对象。 但是它可以保护该实例不被其他代码覆盖。")]),t._v(" "),a("p",[t._v("还有一点： 你不会希望解决同一个问题的代码分散在程序各处的。 因此更好的方式是将其放在同一个类中， 特别是当其他代码已经依赖这个类时更应该如此。")])])]),t._v(" "),a("p",[t._v("如今， 单例模式已经变得非常流行， 以至于人们会将只解决上文描述中任意一个问题的东西称为"),a("em",[t._v("单例")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[t._v("所有单例的实现都包含以下两个相同的步骤：")]),t._v(" "),a("ul",[a("li",[t._v("将默认构造函数设为私有， 防止其他对象使用单例类的 "),a("code",[t._v("new")]),t._v("运算符。")]),t._v(" "),a("li",[t._v("新建一个静态构建方法作为构造函数。 该函数会 “偷偷” 调用私有构造函数来创建对象， 并将其保存在一个静态成员变量中。 此后所有对于该函数的调用都将返回这一缓存对象。")])]),t._v(" "),a("p",[t._v("如果你的代码能够访问单例类， 那它就能调用单例类的静态方法。 无论何时调用该方法， 它总是会返回相同的对象。")]),t._v(" "),a("h2",{attrs:{id:"真实世界类比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实世界类比"}},[t._v("#")]),t._v(" 真实世界类比")]),t._v(" "),a("p",[t._v("政府是单例模式的一个很好的示例。 一个国家只有一个官方政府。 不管组成政府的每个人的身份是什么，  “某政府” 这一称谓总是鉴别那些掌权者的全局访问节点。")]),t._v(" "),a("h1",{attrs:{id:"go-单例模式讲解和代码示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#go-单例模式讲解和代码示例"}},[t._v("#")]),t._v(" Go "),a("strong",[t._v("单例")]),t._v("模式讲解和代码示例")]),t._v(" "),a("p",[a("strong",[t._v("单例")]),t._v("是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。")]),t._v(" "),a("p",[t._v("单例拥有与全局变量相同的优缺点。 尽管它们非常有用， 但却会破坏代码的模块化特性。")]),t._v(" "),a("p",[t._v("在某些其他上下文中， 你不能使用依赖于单例的类。 你也将必须使用单例类。 绝大多数情况下， 该限制会在创建单元测试时出现。")]),t._v(" "),a("h2",{attrs:{id:"概念示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念示例"}},[t._v("#")]),t._v(" 概念示例")]),t._v(" "),a("p",[t._v("通常而言， 单例实例会在结构体首次初始化时创建。 为了实现这一操作， 我们在结构体中定义一个 "),a("code",[t._v("get­Instance")]),t._v("获取实例方法。 该方法将负责创建和返回单例实例。 创建后， 每次调用 "),a("code",[t._v("get­Instance")]),t._v("时都会返回相同的单例实例。")]),t._v(" "),a("p",[t._v("协程方面又有什么需要注意的吗？ 每当多个协程想要访问实例时， 单例结构体就必须返回相同的实例。 正因如此， 单例设计模式的实施工作很容易出错。 下方的例子表示了创建单例的正确方式。")]),t._v(" "),a("p",[t._v("一些值得注意的地方：")]),t._v(" "),a("ul",[a("li",[t._v("最开始时会有 "),a("code",[t._v("nil")]),t._v("检查， 确保 "),a("code",[t._v("single­Instance")]),t._v("单例实例在最开始时为空。 这是为了防止在每次调用 "),a("code",[t._v("get­Instance")]),t._v("方法时都去执行消耗巨大的锁定操作。 如果检查不通过， 则就意味着 "),a("code",[t._v("single­Instance")]),t._v("字段已被填充。")]),t._v(" "),a("li",[a("code",[t._v("single­Instance")]),t._v("结构体将在锁定期间创建。")]),t._v(" "),a("li",[t._v("在获取到锁后还会有另一个 "),a("code",[t._v("nil")]),t._v("检查。 这是为了确保即便是有多个协程绕过了第一次检查， 也只能有一个可以创建单例实例。 否则， 所有协程都会创建自己的单例结构体实例。")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("init")]),t._v("函数")])]),t._v(" "),a("p",[t._v("我们可以在 "),a("code",[t._v("init")]),t._v("函数中创建单例实例。 这仅适用于实例的早期初始化工作已经确定时。  "),a("code",[t._v("init")]),t._v("函数仅会在包中的每个文件里调用一次， 所以我们可以确定其只会创建一个实例。")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("sync.Once")])])]),t._v(" "),a("p",[a("code",[t._v("sync.Once")]),t._v("仅会执行一次操作。 可查看下面的代码：")]),t._v(" "),a("h4",{attrs:{id:"synconce-go-单例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synconce-go-单例"}},[t._v("#")]),t._v(" "),a("strong",[t._v("syncOnce.go:")]),t._v(" 单例")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sync"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" once sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Once\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" single "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" singleInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("single\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("single "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" singleInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        once"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Creating single instance now."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                singleInstance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("single"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Single instance already created."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" singleInstance\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"main-go-客户端代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-go-客户端代码"}},[t._v("#")]),t._v(" "),a("strong",[t._v("main.go:")]),t._v(" 客户端代码")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Scanln is similar to Scan, but stops scanning at a newline and")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// after the final item there must be a newline or EOF.")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Scanln")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"output-txt-执行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-txt-执行结果"}},[t._v("#")]),t._v(" "),a("strong",[t._v("output.txt:")]),t._v(" 执行结果")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Creating single instance now.\nSingle instance already created.\nSingle instance already created.\n")])])])])}),[],!1,null,null,null);s.default=e.exports},418:function(t,s,n){t.exports=n.p+"assets/img/singleton.5d911500.png"},419:function(t,s,n){t.exports=n.p+"assets/img/singleton-comic-1-zh.799057a7.png"}}]);